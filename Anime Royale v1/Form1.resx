<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AER0UP8P0BRBDDlDeXkAAAAASUVORK5CYII=
</value>
  </data>
</root>